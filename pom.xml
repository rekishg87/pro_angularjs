<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>pro.angularjs</groupId>
    <artifactId>angularjs</artifactId>
    <version>1.0-SNAPSHOT</version>

    <name>Pro AngularJS</name>
    <description>Pro AngularJS Ebook</description>

    <!-- We willen een Web ARchive -->
    <packaging>war</packaging>

    <properties>
        <!-- JBoss dependency versions -->
        <version.wildfly.maven.plugin>1.0.2.Final</version.wildfly.maven.plugin>
        <!-- other plugin versions -->
        <version.war.plugin>2.5</version.war.plugin>
    </properties>

    <dependencies>
        <!-- Unit test dependency met scope 'test', omdat we die alleen maar tijdens
    de lifecycle stap 'test' van Maven willen gebruiken. -->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.11</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <!-- Set the name of the war, used as the context root when the app
            is deployed -->
        <finalName>${project.artifactId}</finalName>
        <plugins>
            <plugin>
                <artifactId>maven-war-plugin</artifactId>
                <version>${version.war.plugin}</version>
                <configuration>
                    <!-- dit zorgt ervoor dat de WAR plugin niet gaat zeiken over een web.xml
                    die er niet is, maar whatever, die specificeren we toch maar is toch handig
                    om er bij te hebben als 'documentatie'. -->
                    <failOnMissingWebXml>false</failOnMissingWebXml>
                </configuration>
            </plugin>
            <!-- WildFly plugin to deploy war -->
            <plugin>
                <groupId>org.wildfly.plugins</groupId>
                <artifactId>wildfly-maven-plugin</artifactId>
                <version>${version.wildfly.maven.plugin}</version>
            </plugin>
        </plugins>
    </build>
</project>